Equipo: Debian 7 64 bits
Discos: 2 cada uno de 250 MB 

Bridge in debian 
root@olivos:~# apt-get install bridge-utils
root@olivos:~# vim /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet manual

auto eth1
iface eth1 inet manual

auto vmbr0
iface vmbr0 inet static
address 172.16.7.134
netmask 255.255.255.224
gateway 172.16.7.158
bridge-ports eth0
bridge-sftp off
bridge-fd 0


auto vmbr1
iface vmbr1 inet static
address 192.168.1.1
netmask 255.255.255.224
bridge-ports eth1
bridge-sftp off
bridge-fd 0

#Check /etc/hosts
root@olivos:~# vim /etc/hostname 
icholvvs01.ich.edu.pe
root@olivos:~# vim /etc/hosts
192.168.1.1     icholvvs01.ich.edu.pe icholvvs01
root@localhost# vim /etc/apt/sources.list
deb http://download.proxmox.com/debian wheezy pve 

#Creacion de un script de sincronización 
root@localhost# cd /usr/local/bin/
root@localhost# vim boot.sh
#!/bin/bash
function _registerLog(){
DISK=$1
DATE=`date +%d-%m-%Y`
HORA=`date +%H:%M`
LOG=/var/log/history/.reportsgrub.root
echo " "
echo -n $DATE >> $LOG
echo -n " Install grub in $DISK" >> $LOG
echo -n " $HORA" >> $LOG
echo " " >> $LOG
}

for i in `ls /dev/sd[a-z]` ; do
          grub-install $i
          _registerLog $i
done

root@localhost# chmod 755 /usr/local/bin/boot.sh 

root@localhost# crontab -e 
*/5 * * * * /usr/local/bin/boot.sh 

root@localhost# grub-install /dev/sda 
root@localhost# grub-install /dev/sdb

#Install Proxmox VE 

root@localhost# nano /etc/apt/sources.list

deb http://ftp.at.debian.org/debian wheezy main contrib
# PVE repository provided by proxmox.com, only for installation (this repo will stay on 3.1)
deb http://download.proxmox.com/debian wheezy pve
# security updates
deb http://security.debian.org/ wheezy/updates main contrib
# En caso de tener una arquitectura amd64 
deb [arch=amd64] http://download.proxmox.com/debian wheezy pve

root@localhost# wget -O- "http://download.proxmox.com/debian/key.asc" | apt-key add -

root@localhost# apt-get update && apt-get dist-upgrade

root@localhost# apt-get install pve-firmware pve-kernel-2.6.32-26-pve

root@localhost# apt-get install pve-headers-2.6.32-26-pve

Reboot: Now restart the system using the Proxmox VE kernel. 

root@localhost# reboot -f 

root@localhost# uname -a 

Remove old debian kernel 
root@localhost# apt-get remove linux-image-amd64 linux-image-3.2.0-4-amd64 linux-base

Actualiza grub del kernel 
root@localhost# update-grub

Instalar proxmox
root@localhost# apt-get install proxmox-ve-2.6.32 ntp ssh lvm2 postfix ksm-control-daemon vzprocps open-iscsi bootlogd 

# Verificar la sincronización del raid

root@localhost# cat /proc/mdstat
[root@icholvvs01 ~]# cat /proc/mdstat
Personalities : [raid1]
md1 : active raid1 sda2[2] sdb2[1]
      243871552 blocks super 1.2 [2/1] [_U]
      [===>.................]  recovery = 17.1% (41914304/243871552) finish=67.2min speed=50046K/sec

md0 : active raid1 sda1[2] sdb1[1]
      194368 blocks super 1.2 [2/2] [UU]

unused devices: <none>

[root@icholvvs01 ~]# mdadm -D /dev/md0
/dev/md0:
        Version : 1.2
  Creation Time : Sat Jan  5 15:08:06 2008
     Raid Level : raid1
     Array Size : 194368 (189.84 MiB 199.03 MB)
  Used Dev Size : 194368 (189.84 MiB 199.03 MB)
   Raid Devices : 2
  Total Devices : 2
    Persistence : Superblock is persistent

    Update Time : Sat Jan  5 18:43:47 2008
          State : clean
 Active Devices : 2
Working Devices : 2
 Failed Devices : 0
  Spare Devices : 0

           Name : olivos:0
           UUID : b054d407:8a50a109:6a087519:d785ee85
         Events : 290

    Number   Major   Minor   RaidDevice State
       2       8        1        0      active sync   /dev/sda1
       1       8       17        1      active sync   /dev/sdb1

[root@icholvvs01 ~]# fdisk -l /dev/sd[a-z]

[root@icholvvs01 ~]# mdadm --add /dev/md0 /dev/sda1
[root@icholvvs01 ~]# mdadm -D /dev/md0
[root@icholvvs01 ~]# watch -n 0.1 cat /proc/mdstat
[root@icholvvs01 ~]# mdadm -D /dev/md0
[root@icholvvs01 ~]# cd /boot/
[root@icholvvs01 ~]# grub-install /dev/sda
[root@icholvvs01 ~]# grub-install /dev/sdb
[root@icholvvs01 ~]# mdadm -D /dev/md0
[root@icholvvs01 ~]# mdadm -D /dev/md1
[root@icholvvs01 ~]# mdadm --add /dev/md1 /dev/sda2
[root@icholvvs01 ~]# mdadm -D /dev/md1
[root@icholvvs01 ~]# watch -n 0.1 cat /proc/mdstat

apt-get remove linux-image-amd64 linux-image-3.2.0-4-amd64 linux-base

Descargar plantillas por S.O ( 32 bits )

 vzctl enter 100 

# Habilitar el proxmox para que no te pida el registro
/usr/share/pve-manager/ext4/pvemanagerlib.js
linea 454
comenta ese if (data.status !== 'Active')
y lo reemplazas por
if (false)

# Habilitar tcp_dump 
vzctl set NumNum --capability=net_admin:on --save  


Habilitar iptables en una plantilla de Debian
#############################################
 Si estamos utilizando un sistema Plesk, en una maquina virtualizada con Proxmox con tecnologia open VZ e intentamos hacer uso del firewall de plesk, es muy probable que no funcione, para ello, debemos de activar  ip tables del host sobre el servidor dedicado que deseamos realizar el cambio.

Activación de iptables en nodo host:

1. Debemos de abrir mediante una consola SSH el fichero vz.conf con el comando

pico /etc/vz/vz.conf
2. Borramos o comentamos la linea actual que aparece con IPTABLES= y añadimos la siguiente linea:

IPTABLES="ipt_REJECT ipt_recent ipt_owner ipt_REDIRECT ipt_tos ipt_TOS ipt_LOG ip_conntrack ipt_limit ipt_multiport iptable_filter iptable_mangle ipt_TCPMSS ipt_tcpmss ipt_ttl ipt_length ipt_state iptable_nat ip_nat_ftp"

Guardamos los cambios y reiniciamos el servicio VZ.

/etc/init.d/vz restart
Una vez reiniciado, ya podremos usar iptables en nuestras maquinas virtuales, y funcionará correctamente el firewall de plesk sobre linux.







